<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.homework.mapper.RecordMapper" >
  <resultMap id="BaseResultMap" type="com.homework.pojo.Record" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="studentID" property="studentid" jdbcType="INTEGER" />
    <result column="topicID" property="topicid" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="BIT" />
    <result column="TimeStamp" property="timestamp" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, studentID, topicID, status, TimeStamp
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.homework.pojo.RecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from record
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from record
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.homework.pojo.RecordExample" >
    delete from record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.homework.pojo.Record" >
    insert into record (ID, studentID, topicID, 
      status, TimeStamp)
    values (#{id,jdbcType=INTEGER}, #{studentid,jdbcType=INTEGER}, #{topicid,jdbcType=INTEGER}, 
      #{status,jdbcType=BIT}, #{timestamp,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.homework.pojo.Record" >
    insert into record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="studentid != null" >
        studentID,
      </if>
      <if test="topicid != null" >
        topicID,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="timestamp != null" >
        TimeStamp,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="studentid != null" >
        #{studentid,jdbcType=INTEGER},
      </if>
      <if test="topicid != null" >
        #{topicid,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=BIT},
      </if>
      <if test="timestamp != null" >
        #{timestamp,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.homework.pojo.RecordExample" resultType="java.lang.Integer" >
    select count(*) from record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update record
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.studentid != null" >
        studentID = #{record.studentid,jdbcType=INTEGER},
      </if>
      <if test="record.topicid != null" >
        topicID = #{record.topicid,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.timestamp != null" >
        TimeStamp = #{record.timestamp,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update record
    set ID = #{record.id,jdbcType=INTEGER},
      studentID = #{record.studentid,jdbcType=INTEGER},
      topicID = #{record.topicid,jdbcType=INTEGER},
      status = #{record.status,jdbcType=BIT},
      TimeStamp = #{record.timestamp,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.homework.pojo.Record" >
    update record
    <set >
      <if test="studentid != null" >
        studentID = #{studentid,jdbcType=INTEGER},
      </if>
      <if test="topicid != null" >
        topicID = #{topicid,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=BIT},
      </if>
      <if test="timestamp != null" >
        TimeStamp = #{timestamp,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.homework.pojo.Record" >
    update record
    set studentID = #{studentid,jdbcType=INTEGER},
      topicID = #{topicid,jdbcType=INTEGER},
      status = #{status,jdbcType=BIT},
      TimeStamp = #{timestamp,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=INTEGER}
  </update>
 	 <select id="getAllRecord"
	        resultType="com.homework.pojo.Record"
	        parameterType="com.homework.util.Page">
	  SELECT
	  e.id,
	  e.studentid,
	  e.topicid,
	  e.status,
	  e.timestamp
	  FROM
	  RECORD e
	  WHERE studentid=#{sid}
	  LIMIT #{startIndex},#{pageSize}
	</select>
	<select id="total" resultType="int">
	  select count(*) from RECORD where studentID = #{id,jdbcType=INTEGER}
	</select>
</mapper>